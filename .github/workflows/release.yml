name: Build Obsidian Plugin

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "*" # Push events to matching any tag format, i.e. 1.0, 20.15.10

env:
  PLUGIN_NAME: obsidian-file-modification-stats

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x" # You might need to adjust this value to your own version
      - name: Build
        id: build
        run: |
          npm install
          npm run build --if-present
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls
          echo "name=tag_name::$(git tag --sort version:refname | tail -n 1)" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Install upload-release-assets
        run: npm install @actions/upload-release-assets@v2
      - name: Upload zip file
        id: upload-zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node ./node_modules/@actions/upload-release-assets/dist/index.js \
            --upload-url "${{ steps.create_release.outputs.upload_url }}" \
            --asset-path "./${{ env.PLUGIN_NAME }}.zip" \
            --asset-name "${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip" \
            --asset-content-type "application/zip"
      - name: Upload main.js
        id: upload-main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node ./node_modules/@actions/upload-release-assets/dist/index.js \
            --upload-url "${{ steps.create_release.outputs.upload_url }}" \
            --asset-path "./main.js" \
            --asset-name "main.js" \
            --asset-content-type "text/javascript"
      - name: Upload manifest.json
        id: upload-manifest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node ./node_modules/@actions/upload-release-assets/dist/index.js \
            --upload-url "${{ steps.create_release.outputs.upload_url }}" \
            --asset-path "./manifest.json" \
            --asset-name "manifest.json" \
            --asset-content-type "application/json"
